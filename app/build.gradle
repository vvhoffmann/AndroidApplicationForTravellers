plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.google.android.libraries.mapsplatform.secrets.gradle.plugin)
}

android {
    namespace 'pl.vvhoffmann.routemyway'
    compileSdk 34

    defaultConfig {
        applicationId "pl.vvhoffmann.routemyway"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion = "35.0.0"
    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.play.services.location
    implementation libs.play.services.maps.v1802
    implementation libs.android.maps.utils
    implementation libs.places.v350
    implementation libs.google.maps.services
    implementation libs.support.annotations
    implementation libs.cardview
    implementation libs.rules

    testImplementation libs.junit
    testImplementation libs.ext.junit
    testImplementation libs.espresso.intents
    androidTestImplementation libs.ext.junit
    testImplementation libs.mockito.android
    testImplementation libs.mockito.core

    androidTestImplementation libs.espresso.core
    androidTestImplementation libs.espresso.contrib // Additional Espresso matchers (e.g., RecyclerView)
    androidTestImplementation libs.espresso.intents // For intent verification
    androidTestImplementation libs.espresso.idling.resource // For managing asynchronous operations
    debugImplementation libs.fragment.testing // Fragment testing in isolation
    testImplementation libs.hamcrest.library
    testImplementation libs.truth

}